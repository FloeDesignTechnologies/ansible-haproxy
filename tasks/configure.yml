---

## ASSEMBLE CONFIG - FRONTEND

- name: 'Create directory for the frontend'
  file:
    path: "{{ etc_prefix }}/haproxy/frontends.d"
    state: directory

- name: "List files for the frontends"
  find:
    paths: "{{ etc_prefix }}/haproxy/frontends.d"
    patterns: "*.cfg"
  register: directory_contents
  changed_when: false

- name: "Remove unmanaged files for the frontends"
  file:
    path: "{{ item.path }}"
    state: absent
  when: (item.path | basename) not in (haproxy_frontends | json_query('[*].name') | map('regex_replace',  '(.*)', '\\1.cfg') | list)
  with_items: "{{ directory_contents.files }}"

- name: 'Build up the frontends'
  template:
    src: "frontend.cfg"
    dest: "{{ etc_prefix }}/haproxy/frontends.d/{{ item.name }}.cfg"
  with_items: "{{ haproxy_frontends|default([]) }}"
  when: haproxy_frontends is defined

## ASSEMBLE CONFIG - BACKEND

- name: 'Create directory for the backends'
  file:
    path: "{{ etc_prefix }}/haproxy/backends.d"
    state: directory

- name: "List files for the backends"
  find:
    paths: "{{ etc_prefix }}/haproxy/backends.d"
    patterns: "*.cfg"
  register: directory_contents
  changed_when: false

- name: "Remove unmanaged files for the backends"
  file:
    path: "{{ item.path }}"
    state: absent
  when: (item.path | basename) not in (haproxy_backends | json_query('[*].name') | map('regex_replace',  '(.*)', '\\1.cfg') | list)
  with_items: "{{ directory_contents.files }}"

- name: 'Build up the backends'
  template:
    src: "backend.cfg"
    dest: "{{ etc_prefix }}/haproxy/backends.d/{{ item.name }}.cfg"
  with_items: "{{ haproxy_backends|default([]) }}"
  when: haproxy_backends is defined

## ASSEMBLE CONFIG - LISTEN

- name: 'Create directory for the listen sections'
  file:
    path: "{{ etc_prefix }}/haproxy/listen.d"
    state: directory

- name: "List files the listen sections"
  find:
    paths: "{{ etc_prefix }}/haproxy/listen.d"
    patterns: "*.cfg"
  register: directory_contents
  changed_when: false

- name: "Remove unmanaged files the listen sections"
  file:
    path: "{{ item.path }}"
    state: absent
  when: (item.path | basename) not in (haproxy_listen | json_query('[*].name') | map('regex_replace',  '(.*)', '\\1.cfg') | list)
  with_items: "{{ directory_contents.files }}"

- name: 'Build up the listen sections'
  template:
    src: "listen.cfg"
    dest: "{{ etc_prefix }}/haproxy/listen.d/{{ item.name }}.cfg"
  with_items: "{{ haproxy_listen|default([]) }}"
  when: haproxy_listen is defined

## ASSEMBLE CONFIG - USERLIST

- name: 'Create directory for the userlists'
  file: path={{ etc_prefix }}/haproxy/userlists.d state=directory

- name: "List files for the userlists"
  find:
    paths: "{{ etc_prefix }}/haproxy/userlists.d"
    patterns: "*.cfg"
  register: directory_contents
  changed_when: false

- name: "Remove unmanaged files for the userlists"
  file:
    path: "{{ item.path }}"
    state: absent
  when: (item.path | basename) not in (haproxy_userlists | json_query('[*].name') | map('regex_replace',  '(.*)', '\\1.cfg') | list)
  with_items: "{{ directory_contents.files }}"

- name: 'Build up the userlist sections'
  template:
    src: userlist.cfg
    dest: "{{ etc_prefix }}/haproxy/userlists.d/{{ item.name }}.cfg"
  with_items: "{{ haproxy_userlists|default([]) }}"
  when: haproxy_userlists is defined

## ASSEMBLE CONFIG - GLOBAL & DEFAULT

- name: 'Create  the compiled folder'
  file: path={{ etc_prefix }}/haproxy/compiled state=directory

- name: 'Build up the global config'
  template:
    src: "global.cfg"
    dest: "{{ etc_prefix }}/haproxy/compiled/01-global.cfg"
  when: haproxy_global is defined
  tags: 'test'

- name: 'Build up the default config'
  template:
    src: "defaults.cfg"
    dest: "{{ etc_prefix }}/haproxy/compiled/02-defaults.cfg"
  when: haproxy_defaults is defined

## ASSEMBLE FINAL CONFIG

- name: 'Assemble the backends configuration file'
  assemble:
    src: "{{ etc_prefix }}/haproxy/backends.d"
    dest: "{{ etc_prefix }}/haproxy/compiled/03-backends.cfg"

- name: 'Assemble the frontends configuration file'
  assemble:
    src: "{{ etc_prefix }}/haproxy/frontends.d"
    dest: "{{ etc_prefix }}/haproxy/compiled/04-frontends.cfg"

- name: 'Assemble the listen sections configuration file'
  assemble:
    src: "{{ etc_prefix }}/haproxy/listen.d"
    dest: "{{ etc_prefix }}/haproxy/compiled/05-listen.cfg"

- name: 'Assemble the userlists sections configuration file'
  assemble:
    src: "{{ etc_prefix }}/haproxy/userlists.d"
    dest: "{{ etc_prefix }}/haproxy/compiled/06-userlists.cfg"

- name: 'Assemble the final configuration file'
  assemble:
    src: "{{ etc_prefix }}/haproxy/compiled"
    dest: "{{ config_location }}"
    backup: yes
  notify: restart haproxy
