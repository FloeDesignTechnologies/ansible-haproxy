---
haproxy_defaults:
  log: global
  mode: http
  option:
    - httplog
    - dontlognull
  timeout:
    connect: 5000
    client: 50000
    server: 50000
  errorfile:
    400: /etc/haproxy/errors/400.http
    403: /etc/haproxy/errors/403.http
    408: /etc/haproxy/errors/408.http
    500: /etc/haproxy/errors/500.http
    502: /etc/haproxy/errors/502.http
    503: /etc/haproxy/errors/503.http
    504: /etc/haproxy/errors/504.http


haproxy_global:
  log:
    /dev/log:
      - local0
      - local1 notice
  chroot: /var/lib/haproxy
  stats:
    socket: /run/haproxy/admin.sock mode 660 level admin
    timeout: 30s
  user: haproxy
  group: haproxy
  daemon: true
  ca-base: /etc/ssl/certs
  crt-base: /etc/ssl/private
  ssl-default-bind-ciphers: ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options: no-sslv3


haproxy_mailers:
  mailers1:
    mailer:
      smtp1: 192.0.2.1:587
      smtp2: 192.0.2.2:587
  mailers2:
    mailer:
      smtp1: 192.51.100.1:587
      smtp2: 192.51.100.2:587


haproxy_peers:
  peers1:
    peer:
      haproxy1: 192.0.2.1:1024
      haproxy2: 192.0.2.2:1024
      haproxy3: 192.0.2.3:1024
  peers2:
    peer:
      haproxy1: 192.51.100.1:1024
      haproxy2: 192.51.100.2:1024
      haproxy3: 192.51.100.3:1024


haproxy_resolvers:
  resolvers1:
    nameserver:
      dns1: 192.0.2.1:53
      dns2: 192.0.2.2:53
    resolve_retries: 3
    timeout:
      retry: 1s
    hold:
      valid: 10s
  resolvers2:
    nameserver:
      dns1: 192.51.100.1:53
      dns2: 192.51.100.2:53
    resolve_retries: 3
    timeout:
      retry: 1s
    hold:
      valid: 10s


haproxy_userlists:
  userlist1:
    group:
      - G1 users tiger,scott
      - G2 users xdb,scott
    user:
      - tiger password $6$k6y3o.eP$JlKBx9za9667qe4(...)xHSwRv6J.C0/D7cV91
      - scott insecure-password elgato
      - xdb insecure-password hello
  userlist2:
    group:
      - G1
      - G2
    user:
      - tiger password $6$k6y3o.eP$JlKBx(...)xHSwRv6J.C0/D7cV91 groups G1
      - scott insecure-password elgato groups G1,G2
      - xdb insecure-password hello groups G2


haproxy_listens:
  listen1:
    mode: http
    bind:
      - :80
      - :443 ssl crt /etc/haproxy/site.pem
    acl:
      - invalid_src src 0.0.0.0/7 224.0.0.0/3
      - invalid_src src_port 0:1023
      - local_dst hdr(host) -i localhost
      - es req.fhdr(accept-language),language(es;fr;en) -m str es
      - fr req.fhdr(accept-language),language(es;fr;en) -m str fr
      - en req.fhdr(accept-language),language(es;fr;en) -m str en
    tcp-request:
      connection:
        - accept if { src -f /etc/haproxy/whitelist.lst }
        - reject if { src_conn_rate gt 10 }
        - track-sc0 src
    block:
      - if invalid_src || local_dst
    http-request:
      deny:
        - if invalid_src || local_dst
    reqdel:
      - ^X-Forwarded-For:.*
      - ^Cookie:.*SERVER=
    reqpass:
      - ^Host:\ www.private\.local
    reqadd:
      - X-Proto:\ SSL if is-ssl
    redirect:
      - prefix https://mysite.com set-cookie SEEN=1 if !cookie_set
      - prefix https://mysite.com if login_page !secure
      - prefix http://mysite.com drop-query if login_page !uid_given
      - location http://mysite.com/ if !login_page secure
      - location / clear-cookie USERID= if logout
    use_backend:
      - backend1 if is-app1
      - backend2 if is-app2
    use-server:
      - www if { req_ssl_sni -i www.example.com }
      - mail if { req_ssl_sni -i mail.example.com }
      - imap if { req_ssl_sni -i imap.example.com }
    server:
      www: 192.0.2.1:443 weight 0
      mail: 192.0.2.1:587 weight 0
      imap: 192.0.2.1:993 weight 0
      default: 192.0.2.2:443 check
  listen2:
    no log: true
    disabled: false
